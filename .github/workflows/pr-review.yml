name: PR Review with ChatGPT (script.py only)

on:
  pull_request:
    branches:
      - main

jobs:
  review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if script.py exists
        id: check_file
        run: |
          if [ -f script.py ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Call OpenAI API for review
        if: steps.check_file.outputs.exists == 'true'
        id: chatgpt
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # Read and escape the file content for JSON
          SCRIPT_CONTENT=$(cat script.py | jq -Rs .)
          
          # Make API call and extract the response
          RESPONSE=$(curl https://api.openai.com/v1/chat/completions \
            -s \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d "{
              \"model\": \"gpt-5\",
              \"messages\": [
                {\"role\": \"system\", \"content\": \"Eres un revisor de c√≥digo experto en Python. Haz comentarios constructivos y se√±ala mejoras, enfoc√°ndote en buenas pr√°cticas y legibilidad.\"},
                {\"role\": \"user\", \"content\": $SCRIPT_CONTENT}
              ],
              \"max_tokens\": 1000,
              \"temperature\": 0.3
            }")
          
          # Check if the API call was successful
          if [ $? -ne 0 ]; then
            echo "Error: API call failed"
            exit 1
          fi
          
          # Extract the review content from the response
          REVIEW=$(echo "$RESPONSE" | jq -r '.choices[0].message.content // "Error: No response from API"')
          
          # Check for API errors
          ERROR_MSG=$(echo "$RESPONSE" | jq -r '.error.message // empty')
          if [ -n "$ERROR_MSG" ]; then
            echo "API Error: $ERROR_MSG"
            REVIEW="‚ùå Error al obtener revisi√≥n de ChatGPT: $ERROR_MSG"
          fi
          
          # Save the review to output, escaping for multiline
          {
            echo "review<<EOF"
            echo "$REVIEW"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Comment on PR
        if: steps.check_file.outputs.exists == 'true'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ü§ñ **ChatGPT Review (solo script.py)**
            
            ${{ steps.chatgpt.outputs.review }}

      - name: Comment when script.py not found
        if: steps.check_file.outputs.exists == 'false'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ‚ÑπÔ∏è **ChatGPT Review**
            
            No se encontr√≥ el archivo `script.py` en este PR.